from rsf.proj import *
import fdmod as fd
import numpy as np

# ------------------------------------------------------------
## Modeling parameters
par = {
    'nx':601,  'ox':0, 'dx':2.,     'lx':'x', 'ux':'m',
    'nz':201,  'oz':0, 'dz':2.,     'lz':'z', 'uz':'m',
    'nt':1601, 'ot':0, 'dt':0.0004, 'lt':'t', 'ut':'s',
    'kt':60,
    'ompnth':2,
    'jsnap':100,
    'nb':200,
    'frq':20,
    'height':8
}

# Set other modeling parameters
fd.param(par)


# ------------------------------------------------------------
## Model and acquisition geometry parameters
par['dens'] = 2200.

# Layer's velocities (m/s)
par['lV1'] = 1500.
par['lV2'] = 500. # actually lV2 - lV1. That is, lV2 = 2000.
par['lV3'] = 600. # actually lV3 - lV2. That is, lV3 = 2600.


# layers' top and bottom (m)
par['topl1'] = 0.
par['topl2'] = 150.

# par['topl2'] = 150 + 20*np.sin(2*np.pi*200*np.arange(1202))
par['topl3'] = 300., 350.

par['ntopl1'] = (par['topl1']/par['dz'])
par['ntopl2'] = (par['topl2']/par['dz']) + 1
par['ntopl3'] = (par['topl3']/par['dz']) + 1,


# one-shot source position
par['sx'] = 250.
par['sz'] = 80.

# receiver array depth
par['rz'] = 30.


#------------------------------------------------------------
## Set up models

# density model (kg/m^3)

Flow('Dens', None,
     '''
     spike mag=%(dens)g
     n1=%(nz)d o1=%(oz)g d1=%(dz)g
     n2=%(nx)d o2=%(ox)g d2=%(dx)g |
     put label1=%(lz)s label2=%(lx)s unit1=%(uz)s unit2=%(ux)s
     ''' % par)


# Velocity model

Flow('Vel', None,
     '''
     spike n1=%(nz)d o1=%(oz)g d1=%(dz)g
     	   n2=%(nx)d o2=%(ox)g d2=%(dx)g
     	   nsp=3 mag=%(lV1)g,%(lV2)g,%(lV3)g
		   k1=%(ntopl1)g,%(ntopl2)g,%(ntopl3)g
	       l1=%(nz)g,%(nz)g,%(nz)g
		   label1=%(lz)s label2=%(lx)s unit1=%(uz)s unit2=%(ux)s |
     smooth rect1=3 repeat=3
     ''' % par)

#------------------------------------------------------------
## Set up acquisition geometry

# source point
fd.point('ss', par['sx'], par['sz'], par)

#receiver array
fd.horizontal('rr', par['rz'], par)

#------------------------------------------------------------
## Ploting models
Plot('Vel', fd.cgrey('''wantscalebar=y allpos=y title="Vel" color=j''' , par))


Plot('ss',fd.ssplot('wantscalebar=y symbol=* plotcol=0 symbolsz=7',par))
Plot('rr', 'window j2=10 |' +
           fd.rrplot('wantscalebar=y symbol=v plotcol=2 symbolsz=5',par))

Result('Vel', ['Vel','ss','rr'], 'Overlay')

# ------------------------------------------------------------
# construct wavelet
fd.wavelet('wav_', par['kt'], par)

# transpose wavelet
Flow('wav', 'wav_', 'transp')

# plot wavelet
Result('wav','window n2=500 |' + fd.waveplot('', par))

# ------------------------------------------------------------
# run FD modeling
fd.awefd('data',   # data file (all receivers)
         'wfld',   # wavefield snapshots
         'wav',    # source wavelet
         'Vel',    # velocity
         'Dens',   # density
         'ss',     # source coordinates
         'rr',     # receiver coordinates
         'free=n', # optional flags
         par)

Result('wfld', fd.wgrey('title="Wavefield" pclip=99', par))

Result('data1', 'data',
       'transp | window j2=10 |' + fd.dwigl('title="Recorded data"', par))
Result('data2', 'data',
       'transp |' + fd.dgrey('title="Recorded data" pclip=99', par))


End()
